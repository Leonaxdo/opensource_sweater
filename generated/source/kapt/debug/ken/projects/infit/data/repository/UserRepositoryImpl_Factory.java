// Generated by Dagger (https://dagger.dev).
package ken.projects.infit.data.repository;

import android.app.Application;
import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepositoryImpl_Factory implements Factory<UserRepositoryImpl> {
  private final Provider<Application> appProvider;

  private final Provider<FirebaseAuth> authProvider;

  public UserRepositoryImpl_Factory(Provider<Application> appProvider,
      Provider<FirebaseAuth> authProvider) {
    this.appProvider = appProvider;
    this.authProvider = authProvider;
  }

  @Override
  public UserRepositoryImpl get() {
    return newInstance(appProvider.get(), authProvider.get());
  }

  public static UserRepositoryImpl_Factory create(Provider<Application> appProvider,
      Provider<FirebaseAuth> authProvider) {
    return new UserRepositoryImpl_Factory(appProvider, authProvider);
  }

  public static UserRepositoryImpl newInstance(Application app, FirebaseAuth auth) {
    return new UserRepositoryImpl(app, auth);
  }
}
